Create User Bmcsdl_1 Identified By 123;
grant create session to BMCSDL_1;
grant create table to BMCSDL_1;
alter user BMCSDL_1 quota 100M on users;

drop user BMCSDL_1 cascade;

GRANT CREATE USER TO BMCSDL_1;          
GRANT CREATE TABLE TO BMCSDL_1;     
GRANT CONNECT TO BMCSDL_1;
GRANT ALTER USER, DROP USER TO BMCSDL_1;  
GRANT CREATE SESSION TO BMCSDL_1;

GRANT ALL PRIVILEGES TO BMCSDL_1;

select * from dba_users;
select * from all_users;

commit

Select * from nhanvien;
select * from nguoithue;
select * from phong;
select * from dat_phong;

SELECT * FROM USER_ROLE_PRIVS;
SELECT * FROM USER_TAB_PRIVS;
SELECT * FROM USER_SYS_PRIVS; ----------



CREATE TABLE PHONG
(
  MA_PHONG INT PRIMARY KEY,
  TEN_PHONG NVARCHAR2(255),
  TANG INT,
  SO_GIUONG INT,
  GIA FLOAT CHECK (GIA >= 0),
  TRANG_THAI NVARCHAR2(50)
);


CREATE TABLE NHANVIEN
(
  USERNAME NVARCHAR2(255),
  MA_NHANVIEN INT PRIMARY KEY,
  SDT_NV NVARCHAR2(12),
  EMAIL_NV VARCHAR(255),
  PW VARCHAR(255),
  MA_KHACHSAN INT,
  MA_NV_QUANLY INT,
  CONSTRAINT FK_NV_NV FOREIGN KEY (MA_NV_QUANLY) REFERENCES NHANVIEN(MA_NHANVIEN)
);

alter table nhanvien
drop column hoten_nv

CREATE TABLE NGUOITHUE
(
  MA_NGUOITHUE INT PRIMARY KEY,
  HOTEN_NT NVARCHAR2(255),
  SDT NVARCHAR2(12),
  EMAIL VARCHAR(255)
);

CREATE TABLE DAT_PHONG 
(
  MA_DATPHONG INT PRIMARY KEY,
  NGAY_VAO DATE,
  NGAY_RA DATE,
  MA_PHONG INT,
  MA_NGUOITHUE INT,
  MA_NHANVIEN INT,
  CONSTRAINT FK_DP_PH FOREIGN KEY (MA_PHONG) REFERENCES PHONG(MA_PHONG),
  CONSTRAINT FK_DP_NT FOREIGN KEY (MA_NGUOITHUE) REFERENCES NGUOITHUE(MA_NGUOITHUE),
  CONSTRAINT FK_DP_NV FOREIGN KEY (MA_NHANVIEN) REFERENCES NHANVIEN(MA_NHANVIEN)
);

CREATE SEQUENCE nhanvien_seq START WITH 1 INCREMENT BY 1;



CREATE OR REPLACE PROCEDURE ENCRYPT_PW (
    p_plaintext IN VARCHAR2,    
    p_key       IN VARCHAR2,    
    p_ciphertext OUT RAW         
) AS
BEGIN
    p_ciphertext := DBMS_CRYPTO.ENCRYPT(
                        src => UTL_I18N.STRING_TO_RAW(p_plaintext, 'AL32UTF8'),
                        typ => DBMS_CRYPTO.ENCRYPT_AES256 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5,
                        key => UTL_I18N.STRING_TO_RAW(p_key, 'AL32UTF8')        
                    );
END;
/
CREATE OR REPLACE PROCEDURE DECRYPT_PW (
    p_ciphertext IN RAW,          
    p_key        IN VARCHAR2,    
    p_plaintext  OUT VARCHAR2     
) AS
    v_decrypted_raw RAW(32767);
BEGIN
    v_decrypted_raw := DBMS_CRYPTO.DECRYPT(
                           src => p_ciphertext,
                           typ => DBMS_CRYPTO.ENCRYPT_AES256 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5,
                           key => UTL_I18N.STRING_TO_RAW(p_key, 'AL32UTF8')
                       );

    p_plaintext := UTL_I18N.RAW_TO_CHAR(v_decrypted_raw, 'AL32UTF8');
END;
/
